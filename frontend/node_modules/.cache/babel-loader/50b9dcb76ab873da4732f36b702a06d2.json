{"ast":null,"code":"import AthleteService from\"../services/athlete.service\";import AuthService from\"../services/auth.service\";var userAuth=AuthService.getCurrentUser();//const user = AuthService.getCurrentUser();\nvar user={username:\"\",email:\"\",firstName:\"\",lastName:\"\",gender:{name:\"\"},weight:null,height:null,birthDate:null,diseases:\"\"};if(userAuth!=null){AthleteService.getUser(userAuth.id).then(function(response){user=response;console.log(response);});}var userReducer=function userReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:user;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"UPDATE\":return state;default:return state;}};export default userReducer;","map":{"version":3,"sources":["/home/mnasfi/Study/STOCK/frontend/src/reducers/userReducer.jsx"],"names":["AthleteService","AuthService","userAuth","getCurrentUser","user","username","email","firstName","lastName","gender","name","weight","height","birthDate","diseases","getUser","id","then","response","console","log","userReducer","state","action","type"],"mappings":"AAAA,MAAOA,CAAAA,cAAP,KAA2B,6BAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CAEA,GAAMC,CAAAA,QAAQ,CAAGD,WAAW,CAACE,cAAZ,EAAjB,CACA;AAEA,GAAIC,CAAAA,IAAI,CAAG,CACTC,QAAQ,CAAE,EADD,CAETC,KAAK,CAAE,EAFE,CAGTC,SAAS,CAAE,EAHF,CAITC,QAAQ,CAAE,EAJD,CAKTC,MAAM,CAAE,CAAEC,IAAI,CAAE,EAAR,CALC,CAMTC,MAAM,CAAE,IANC,CAOTC,MAAM,CAAE,IAPC,CAQTC,SAAS,CAAE,IARF,CASTC,QAAQ,CAAE,EATD,CAAX,CAWA,GAAIZ,QAAQ,EAAI,IAAhB,CAAsB,CACpBF,cAAc,CAACe,OAAf,CAAuBb,QAAQ,CAACc,EAAhC,EAAoCC,IAApC,CAAyC,SAACC,QAAD,CAAc,CACrDd,IAAI,CAAGc,QAAP,CACAC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACD,CAHD,EAID,CAED,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAA0B,IAAzBC,CAAAA,KAAyB,2DAAjBlB,IAAiB,IAAXmB,CAAAA,MAAW,2CAC5C,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,QAAL,CACE,MAAOF,CAAAA,KAAP,CACF,QACE,MAAOA,CAAAA,KAAP,CAJJ,CAMD,CAPD,CAQA,cAAeD,CAAAA,WAAf","sourcesContent":["import AthleteService from \"../services/athlete.service\";\nimport AuthService from \"../services/auth.service\";\n\nconst userAuth = AuthService.getCurrentUser();\n//const user = AuthService.getCurrentUser();\n\nlet user = {\n  username: \"\",\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  gender: { name: \"\" },\n  weight: null,\n  height: null,\n  birthDate: null,\n  diseases: \"\",\n};\nif (userAuth != null) {\n  AthleteService.getUser(userAuth.id).then((response) => {\n    user = response;\n    console.log(response);\n  });\n}\n\nconst userReducer = (state = user, action) => {\n  switch (action.type) {\n    case \"UPDATE\":\n      return state;\n    default:\n      return state;\n  }\n};\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}